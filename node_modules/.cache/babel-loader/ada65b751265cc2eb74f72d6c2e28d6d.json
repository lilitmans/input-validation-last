{"remainingRequest":"C:\\Users\\DELL E7450\\PhpstormProjects\\input-validation\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\DELL E7450\\PhpstormProjects\\input-validation\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\DELL E7450\\PhpstormProjects\\input-validation\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\DELL E7450\\PhpstormProjects\\input-validation\\src\\components\\GeneralInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\DELL E7450\\PhpstormProjects\\input-validation\\src\\components\\GeneralInfo.vue","mtime":1569505331971},{"path":"C:\\Users\\DELL E7450\\PhpstormProjects\\input-validation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\DELL E7450\\PhpstormProjects\\input-validation\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\DELL E7450\\PhpstormProjects\\input-validation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\DELL E7450\\PhpstormProjects\\input-validation\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* eslint semi: \"error\" */\nimport VueMask from 'v-mask';\nexport default {\n  name: 'GeneralInfo',\n  directives: {\n    VueMask: VueMask\n  },\n  data: function data() {\n    return {\n      checked: true,\n      warningClass: 'warningClass',\n      countries: [],\n      isValidFields: {\n        validFirstName: function validFirstName() {\n          return this.isCorrect.firstName;\n        },\n        validLastName: function validLastName() {\n          return this.isCorrect.lastName.isValid;\n        },\n        validCity: function validCity() {\n          return this.isCorrect.city.isValid;\n        },\n        validAddress: function validAddress() {\n          return this.isCorrect.address.isValid;\n        },\n        validCountry: function validCountry() {\n          return this.isCorrect.select.isValid;\n        },\n        validPostalCode: function validPostalCode() {\n          return this.isCorrect.postalCode.isValid;\n        }\n      },\n      isCorrect: {\n        firstName: {\n          firstNameValue: null,\n          error: 'Fill in your name, please',\n          isValid: false,\n          wasFocused: false\n        },\n        lastName: {\n          lastNameValue: null,\n          error: 'Fill in your surname, please',\n          isValid: false,\n          wasFocused: false\n        },\n        city: {\n          name: '',\n          error: 'Enter valid city name, please',\n          isValid: false,\n          wasFocused: false\n        },\n        address: {\n          value: '',\n          error: 'Fill in your address, please',\n          isValid: false,\n          wasFocused: false\n        },\n        select: {\n          countryObj: 'Choose your country',\n          error: 'Enter valid country, please',\n          isValid: false,\n          wasClicked: false\n        },\n        postalCode: {\n          value: '',\n          error: 'Postal code doesn\\'t match for country',\n          isValid: true,\n          wasFocused: false\n        }\n      },\n      state: true\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.axios.get('https://gist.githubusercontent.com/jamesbar2/1c677c22df8f21e869cca7e439fc3f5b/raw/21662445653ac861f8ab81caa8cfaee3185aed15/postal-codes.json').then(function (response) {\n      return _this.countries = response.data;\n    });\n  },\n  methods: {\n    checkIsStringEmpty: function checkIsStringEmpty(el) {\n      if (el === 'firstName') {\n        !this.isCorrect[el].firstNameValue ? this.isCorrect[el].wasFocused = true : this.isCorrect[el].wasFocused = false;\n      } else if (el === 'lastName') {\n        !this.isCorrect[el].lastNameValue ? this.isCorrect[el].wasFocused = true : this.isCorrect[el].wasFocused = false;\n      }\n    },\n    isValidNameLastName: function isValidNameLastName() {\n      if (!this.isCorrect.firstName.firstNameValue) {\n        this.isCorrect.firstName.wasFocused = true;\n      }\n\n      if (!this.isCorrect.lastName.firstNameValue) {\n        this.isCorrect.lastName.wasFocused = true;\n      }\n    },\n    checkIsValidCity: function checkIsValidCity() {\n      /^[a-zA-Z]+(?:[\\s-][a-zA-Z]+)*$/.test(this.isCorrect.city.name) ? this.isCorrect.city.wasFocused = false : this.isCorrect.city.wasFocused = true;\n    },\n    isFirstCharNumber: function isFirstCharNumber() {\n      var addressVal = this.isCorrect.address.value;\n      var firstChar = addressVal.charAt(0).trim();\n\n      if (!Number(firstChar) || !addressVal) {\n        this.isCorrect.address.isValid = false;\n        this.isCorrect.address.wasFocused = true;\n      } else {\n        this.isCorrect.isValid = true;\n        this.isCorrect.address.wasFocused = false;\n      }\n    },\n    checkIfCountrySelected: function checkIfCountrySelected() {\n      if (this.isCorrect.select.countryObj === 'Choose your country') {\n        this.isCorrect.select.isValid = false;\n        this.isCorrect.select.wasClicked = true;\n      } else {\n        this.isCorrect.select.isValid = true;\n        this.isCorrect.select.wasClicked = false;\n      }\n    },\n    comparePostalCodeWithCountry: function comparePostalCodeWithCountry() {\n      var regex = new RegExp(this.isCorrect.select.countryObj.Regex);\n      var postalCodeVal = this.isCorrect.postalCode.value;\n\n      if (regex.test(postalCodeVal)) {\n        this.isCorrect.postalCode.wasFocused = true;\n        this.isCorrect.postalCode.isValid = true;\n        this.isCorrect.select.isValid = true;\n      } else {\n        this.isCorrect.postalCode.isValid = false;\n        this.isCorrect.select.isValid = false;\n      }\n    },\n    submitForm: function submitForm() {\n      this.isValidNameLastName();\n      this.isFirstCharNumber();\n      this.checkIsValidCity();\n      this.comparePostalCodeWithCountry();\n      this.checkIfCountrySelected();\n      var firsN = this.isValidFields.validFirstName;\n      var lastN = this.isValidFields.validLastName;\n      var city = this.isValidFields.validCity;\n      var address = this.isValidFields.validAddress;\n      var country = this.isValidFields.validCountry;\n      var postalCode = this.isValidFields.validPostalCode; //\n      // if (!firsN || !lastN || !city || !address || !country || !postalCode) return false;\n    }\n  },\n  computed: {}\n};",{"version":3,"sources":["GeneralInfo.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div id=\"_general-info\">\r\n    <div class=\"input-block\">\r\n      <label for=\"_firstName\">First Name</label>\r\n      <input id=\"_firstName\" type=\"text\" name=\"firstName\" placeholder=\"First Name\"\r\n             v-model=\"isCorrect.firstName.firstNameValue\"\r\n             @input=\"checkIsStringEmpty('firstName')\"\r\n             :class=\"{warningClass: this.isCorrect.firstName.wasFocused}\"\r\n             required>\r\n            <span class=\"error-msg\" :class=\"{show: this.isCorrect.firstName.wasFocused }\">{{isCorrect\r\n              .firstName.error}}</span>\r\n    </div>\r\n\r\n    <div class=\"input-block\">\r\n      <label for=\"_lastName\">Last Name</label>\r\n      <input id=\"_lastName\" type=\"text\" name=\"lastName\" placeholder=\"Last Name\"\r\n             v-model=\"isCorrect.lastName.lastNameValue\"\r\n             @input=\"checkIsStringEmpty('lastName')\"\r\n             :class=\"{warningClass: this.isCorrect.lastName.wasFocused }\" required>\r\n            <span class=\"error-msg\"\r\n                  :class=\"{show: this.isCorrect.lastName.wasFocused }\">{{isCorrect.lastName\r\n        .error}}</span>\r\n    </div>\r\n\r\n    <div class=\"input-block\">\r\n      <label for=\"_selectCountry\">Choose your country</label>\r\n      <select id=\"_selectCountry\" name=\"countryValue\"\r\n              v-model=\"isCorrect.select.countryObj\"\r\n              @change=\"comparePostalCodeWithCountry\"\r\n              @click=\"checkIfCountrySelected\"\r\n              :class=\"{warningClass: !this.isCorrect.select.isValid && this.isCorrect.select.wasClicked}\" required>\r\n        <option value=\"Choose your country\" disabled selected>Choose your country</option>\r\n        <option v-for=\"(el,index) in countries\"\r\n                :value=\"el\" :key=\"index\">{{el.Country}}</option>\r\n      </select>\r\n      <span class=\"error-msg\" :class=\"{show: !this.isCorrect.select.isValid && this.isCorrect.select.wasClicked}\">{{\r\n        this.isCorrect.select\r\n        .error}}</span>\r\n    </div>\r\n\r\n    <div class=\"input-block\">\r\n      <label for=\"city\">City</label>\r\n      <input id=\"city\" type=\"text\" name=\"city\" placeholder=\"City\"\r\n             v-model=\"isCorrect.city.name\"\r\n             @input=\"checkIsValidCity\"\r\n             :class=\"{warningClass: isCorrect.city.wasFocused }\">\r\n      <span class=\"error-msg\" :class=\"{show: isCorrect.city.wasFocused }\">{{isCorrect.city\r\n        .error}}</span>\r\n    </div>\r\n\r\n    <div class=\"input-block\">\r\n      <label for=\"address\">Address</label>\r\n      <input id=\"address\" name=\"address\" type=\"text\"\r\n             v-model=\"isCorrect.address.value\"\r\n             v-mask=\"'#XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'\"\r\n             @input=\"isFirstCharNumber\"\r\n             placeholder=\"Address\"\r\n             :class=\"{warningClass: !isCorrect.address.isValid && isCorrect.address.wasFocused}\">\r\n      <span class=\"error-msg\"\r\n            :class=\"{show: !isCorrect.address.isValid && isCorrect.address.wasFocused}\">{{isCorrect.address\r\n        .error}}</span>\r\n    </div>\r\n\r\n    <div class=\"input-block\">\r\n      <label for=\"_postalCode\">Postal code</label>\r\n      <input id=\"_postalCode\" type=\"text\" placeholder=\"Postal code\"\r\n             v-model=\"isCorrect.postalCode.value\"\r\n             @input=\"comparePostalCodeWithCountry\"\r\n             :class=\"{warningClass: !isCorrect.postalCode.isValid && isCorrect.postalCode.wasFocused}\">\r\n      <span class=\"error-msg\"\r\n            :class=\"{show: !isCorrect.postalCode.isValid && isCorrect.postalCode.wasFocused}\">\r\n        {{isCorrect.postalCode.error}}</span>\r\n    </div>\r\n\r\n    <div class=\"checkbox-wrapper\">\r\n      <input id=\"_saveInfo-checkbox\"\r\n             type=\"checkbox\" v-model=\"checked\">\r\n      <label for=\"_saveInfo-checkbox\"></label>\r\n    </div>\r\n\r\n    <input type=\"submit\" value=\"checked\"\r\n      @click=\"submitForm\">\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n/* eslint semi: \"error\" */\r\n\r\nimport VueMask from 'v-mask';\r\n\r\nexport default {\r\n  name: 'GeneralInfo',\r\n  directives: {\r\n    VueMask\r\n  },\r\n  data () {\r\n    return {\r\n      checked: true,\r\n      warningClass: 'warningClass',\r\n      countries: [],\r\n      isValidFields: {\r\n        validFirstName: function () { return this.isCorrect.firstName; },\r\n        validLastName: function () { return this.isCorrect.lastName.isValid; },\r\n        validCity: function () { return this.isCorrect.city.isValid; },\r\n        validAddress: function () { return this.isCorrect.address.isValid; },\r\n        validCountry: function () { return this.isCorrect.select.isValid; },\r\n        validPostalCode: function () { return this.isCorrect.postalCode.isValid; }\r\n      },\r\n      isCorrect: {\r\n        firstName: {\r\n          firstNameValue: null,\r\n          error: 'Fill in your name, please',\r\n          isValid: false,\r\n          wasFocused: false\r\n        },\r\n        lastName: {\r\n          lastNameValue: null,\r\n          error: 'Fill in your surname, please',\r\n          isValid: false,\r\n          wasFocused: false\r\n        },\r\n        city: {\r\n          name: '',\r\n          error: 'Enter valid city name, please',\r\n          isValid: false,\r\n          wasFocused: false\r\n        },\r\n        address: {\r\n          value: '',\r\n          error: 'Fill in your address, please',\r\n          isValid: false,\r\n          wasFocused: false\r\n        },\r\n        select: {\r\n          countryObj: 'Choose your country',\r\n          error: 'Enter valid country, please',\r\n          isValid: false,\r\n          wasClicked: false\r\n        },\r\n        postalCode: {\r\n          value: '',\r\n          error: 'Postal code doesn\\'t match for country',\r\n          isValid: true,\r\n          wasFocused: false\r\n        }\r\n      },\r\n      state: true\r\n    };\r\n  },\r\n  mounted: function () {\r\n    this.axios\r\n      .get('https://gist.githubusercontent.com/jamesbar2/1c677c22df8f21e869cca7e439fc3f5b/raw/21662445653ac861f8ab81caa8cfaee3185aed15/postal-codes.json')\r\n      .then(response => (this.countries = response.data));\r\n  },\r\n  methods: {\r\n    checkIsStringEmpty: function (el) {\r\n      if (el === 'firstName') {\r\n        (!this.isCorrect[el].firstNameValue)\r\n          ? this.isCorrect[el].wasFocused = true\r\n          : this.isCorrect[el].wasFocused = false;\r\n      } else if (el === 'lastName') {\r\n        (!this.isCorrect[el].lastNameValue)\r\n          ? this.isCorrect[el].wasFocused = true\r\n          : this.isCorrect[el].wasFocused = false;\r\n      }\r\n    },\r\n    isValidNameLastName () {\r\n      if (!this.isCorrect.firstName.firstNameValue) {\r\n        this.isCorrect.firstName.wasFocused = true;\r\n      }\r\n      if (!this.isCorrect.lastName.firstNameValue) {\r\n        this.isCorrect.lastName.wasFocused = true;\r\n      }\r\n    },\r\n    checkIsValidCity: function () {\r\n      /^[a-zA-Z]+(?:[\\s-][a-zA-Z]+)*$/.test(this.isCorrect.city.name)\r\n        ? this.isCorrect.city.wasFocused = false\r\n        : this.isCorrect.city.wasFocused = true;\r\n    },\r\n    isFirstCharNumber: function () {\r\n      let addressVal = this.isCorrect.address.value;\r\n      let firstChar = addressVal.charAt(0).trim();\r\n      if (!Number(firstChar) || !addressVal) {\r\n        this.isCorrect.address.isValid = false;\r\n        this.isCorrect.address.wasFocused = true;\r\n      } else {\r\n        this.isCorrect.isValid = true;\r\n        this.isCorrect.address.wasFocused = false;\r\n      }\r\n    },\r\n    checkIfCountrySelected () {\r\n      if (this.isCorrect.select.countryObj === 'Choose your country') {\r\n        this.isCorrect.select.isValid = false;\r\n        this.isCorrect.select.wasClicked = true;\r\n      } else {\r\n        this.isCorrect.select.isValid = true;\r\n        this.isCorrect.select.wasClicked = false;\r\n      }\r\n    },\r\n    comparePostalCodeWithCountry: function () {\r\n      const regex = new RegExp(this.isCorrect.select.countryObj.Regex);\r\n      const postalCodeVal = this.isCorrect.postalCode.value;\r\n\r\n      if (regex.test(postalCodeVal)) {\r\n        this.isCorrect.postalCode.wasFocused = true;\r\n        this.isCorrect.postalCode.isValid = true;\r\n        this.isCorrect.select.isValid = true;\r\n      } else {\r\n        this.isCorrect.postalCode.isValid = false;\r\n        this.isCorrect.select.isValid = false;\r\n      }\r\n    },\r\n    submitForm: function () {\r\n      this.isValidNameLastName();\r\n      this.isFirstCharNumber();\r\n      this.checkIsValidCity();\r\n      this.comparePostalCodeWithCountry();\r\n      this.checkIfCountrySelected();\r\n\r\n      let firsN = this.isValidFields.validFirstName;\r\n      let lastN = this.isValidFields.validLastName;\r\n      let city = this.isValidFields.validCity;\r\n      let address = this.isValidFields.validAddress;\r\n      let country = this.isValidFields.validCountry;\r\n      let postalCode = this.isValidFields.validPostalCode;\r\n      //\r\n      // if (!firsN || !lastN || !city || !address || !country || !postalCode) return false;\r\n    }\r\n  },\r\n  computed: {\r\n  }\r\n\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  #_general-info {\r\n\r\n  }\r\n</style>\r\n"],"sourceRoot":"src/components"}]}